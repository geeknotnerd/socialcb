<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:facebook="http://www.springframework.org/schema/social/facebook"
	xmlns:twitter="http://www.springframework.org/schema/social/twitter"
	xmlns:social="http://www.springframework.org/schema/social"
	xmlns:linkedin="http://www.springframework.org/schema/social/linkedin"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/social/facebook http://www.springframework.org/schema/social/spring-social-facebook.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/social/linkedin http://www.springframework.org/schema/social/spring-social-linkedin.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/social/twitter http://www.springframework.org/schema/social/spring-social-twitter.xsd
		http://www.springframework.org/schema/social http://www.springframework.org/schema/social/spring-social.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<context:property-placeholder
		location="classpath:/com/socialcb/config/application.properties" />

	<!-- <facebook:config app-id="${facebook.clientId}" app-secret="${facebook.clientSecret}" 
		app-namespace="socialshowcase" /> <twitter:config app-id="${twitter.consumerKey}" 
		app-secret="${twitter.consumerSecret}"/> <linkedin:config app-id="${linkedin.consumerKey}" 
		app-secret="${linkedin.consumerSecret}"/> -->

	<!-- <social:jdbc-connection-repository /> -->
	<!-- <bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource" 
		/> -->
	<bean id="connectController"
		class="org.springframework.social.connect.web.ConnectController"
		autowire="constructor" />

	<!-- <property name="connectInterceptors"> <list> <bean class="org.springframework.social.showcase.facebook.PostToWallAfterConnectInterceptor" 
		/> <bean class="org.springframework.social.showcase.twitter.TweetAfterConnectInterceptor" 
		/> </list> </property> </bean> -->

	<!-- <bean id="psc" class="org.springframework.social.connect.web.ProviderSignInController" 
		autowire="constructor" /> <bean id="signInAdapter" class="org.springframework.social.showcase.signin.SimpleSignInAdapter" 
		autowire="constructor" /> <bean id="disconnectController" class="org.springframework.social.facebook.web.DisconnectController" 
		c:_0-ref="usersConnectionRepository" c:_1="${facebook.clientSecret}" /> -->

	<bean id="connectionFactoryLocator"
		class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
		<property name="connectionFactories">
			<list>
				<bean
					class="org.springframework.social.twitter.connect.TwitterConnectionFactory">
					<constructor-arg value="${twitter.consumerKey}" />
					<constructor-arg value="${twitter.consumerSecret}" />
				</bean>
				<bean
					class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
					<constructor-arg value="${facebook.clientId}" />
					<constructor-arg value="${facebook.clientSecret}" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="usersConnectionRepository"
		class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="connectionFactoryLocator" />
		<constructor-arg ref="textEncryptor" />
	</bean>

	<bean id="connectionRepository" factory-method="createConnectionRepository"
		factory-bean="usersConnectionRepository" scope="request">
		<constructor-arg value="#{request.userPrincipal.name}" />
		<aop:scoped-proxy proxy-target-class="false" />
	</bean>
<!-- 	<bean
		class="org.springframework.social.connect.signin.web.ProviderSignInController" autowire="constructor">
		relies on by-type autowiring for the constructor-args
	</bean> -->
</beans>
